{"version":3,"sources":["store/selected/types.ts","components/StylesComponents.tsx","components/Step3.tsx","icons/mood-awesome.svg","icons/mood-not-well.svg","icons/mood-ok.svg","components/RadioButton.tsx","components/Step1.tsx","store/data/types.ts","containers/Step1Container.tsx","store/data/actions.ts","store/selected/actions.ts","components/CheckboxButton.tsx","components/Step2.tsx","containers/Step2Container.tsx","App.tsx","serviceWorker.ts","store/data/reducers.ts","store/selected/reducers.ts","store/index.ts","store/data/sagas.ts","store/selected/sagas.ts","index.tsx"],"names":["Mood","CUSTOM_REASON_SET","MOOD_SET","REASONS_SET","SELECTED_SEND","SELECTED_SEND_ERROR","Error","styled","div","_templateObject","GoBackButton","button","_templateObject2","Heading","h2","_templateObject3","Step","_templateObject4","Step2Icon","span","_templateObject5","props","type","Awesome","NotWell","OK","SubmitButton","_templateObject6","Step3","react_default","a","createElement","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","mood_awesome_ref2","fill","d","mood_awesome_SvgMoodAwesome","_ref","svgRef","aria-hidden","focusable","data-prefix","data-icon","className","role","viewBox","ref","ForwardRef","forwardRef","__webpack_require__","p","mood_not_well_extends","mood_not_well_objectWithoutProperties","mood_not_well_objectWithoutPropertiesLoose","mood_not_well_ref2","mood_not_well_SvgMoodNotWell","mood_not_well_ForwardRef","mood_ok_extends","mood_ok_objectWithoutProperties","mood_ok_objectWithoutPropertiesLoose","mood_ok_ref2","mood_ok_SvgMoodOk","mood_ok_ForwardRef","Label","label","RadioButton_templateObject","Button","RadioButton_templateObject2","RadioButton","icon","id","value","field","form","checked","values","name","htmlFor","Steps","ButtonContainer","Step1_templateObject","FormContainer","Step1_templateObject2","Step1","initialValues","mood","userName","formik_esm","enableReinitialize","validate","errors","NotSelected","concat","onSubmit","actions","clearReasons","setMood","nextStep","setSubmitting","render","isSubmitting","message","innerProps","components_RadioButton","disabled","FETCH_ERROR","INITIAL_TOGGLE","REASONS_FETCH","REASONS_FETCH_SUCCESS","STEP_NEXT","STEP_PREV","USER_FETCH","USER_FETCH_SUCCESS","STEP_MIN","STEP_MAX","connect","state","data","selected","dispatch","payload","reasons","components_Step1","CheckboxButton_templateObject","CheckboxButton","CheckboxButton_Label","includes","onChange","nextValue","filter","item","setFieldValue","TextInput","input","Step2_templateObject","Section","Step2_templateObject2","Step2","customReason","selectedReasons","onClick","prevStep","setCustomReason","setReasons","sendSelected","react_loaders_default","active","map","reason","components_CheckboxButton","_ref2","fetchReasonsAction","fetchReasons","send","useEffect","components_Step2","fetchUserAction","step","isInitial","currentStep","containers_Step1Container","Step2Container","components_Step3","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","undefined","action","console","error","objectSpread","toConsumableArray","fetchUser","reasonsSaga","userSaga","dataSaga","response","regenerator_default","wrap","_context","prev","next","axios","get","params","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","_context5","all","_marked5","saga","post","sagas_marked","sagas_marked2","sagas_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","selectedSaga","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34c54e54.chunk.js","sourcesContent":["export const CUSTOM_REASON_SET = \"CUSTOM_REASON_SET\";\nexport const MOOD_SET = \"MOOD_SET\";\nexport const REASONS_SET = \"REASONS_SET\";\nexport const SELECTED_SEND = \"SELECTED_SEND\";\nexport const SELECTED_SEND_ERROR = \"SELECTED_SEND_ERROR\";\n\nexport enum Mood {\n  NotSelected = \"NotSelected\",\n  NotWell = \"NotWell\",\n  OK = \"OK\",\n  Awesome = \"Awesome\"\n}\n\nexport interface SelectedState {\n  customReason: string;\n  mood: Mood;\n  selectedReasons: number[];\n}\n\nexport interface SendAction {\n  type: typeof SELECTED_SEND;\n  payload: SelectedState;\n}\n\ninterface SendErrorAction {\n  type: typeof SELECTED_SEND_ERROR;\n  payload: {\n    message: string;\n  };\n}\n\ninterface SetCustomReasonAction {\n  type: typeof CUSTOM_REASON_SET;\n  payload: {\n    reason: string;\n  };\n}\n\ninterface SetMoodAction {\n  type: typeof MOOD_SET;\n  payload: {\n    mood: Mood;\n  };\n}\n\ninterface SetReasonsAction {\n  type: typeof REASONS_SET;\n  payload: {\n    reasons: number[];\n  };\n}\n\nexport type SelectedActionTypes =\n  | SendAction\n  | SendErrorAction\n  | SetCustomReasonAction\n  | SetMoodAction\n  | SetReasonsAction;\n","import styled from \"styled-components\";\nimport { Mood } from \"../store/selected/types\";\n\nexport const Error = styled.div`\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n  color: #721c24;\n  margin: 5px 0;\n  padding: 5px 2px;\n  text-align: center;\n`;\n\nexport const GoBackButton = styled.button`\n  background-color: #fff;\n  border: 1px solid transparent;\n  color: #212529;\n  cursor: pointer;\n  margin-bottom: 20px;\n  padding: 5px;\n\n  &:hover {\n    background-color: #e2e6ea;\n    border-color: #dae0e5;\n  }\n`;\n\nexport const Heading = styled.h2`\n  color: #000;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 20px;\n  text-align: center;\n\n  svg {\n    vertical-align: bottom;\n    width: 28px;\n  }\n`;\n\nexport const Step = styled.div`\n  max-width: 320px;\n  padding: 30px;\n`;\n\nexport const Step2Icon = styled.span<{ type: Mood }>`\n  ${props =>\n    props.type === Mood.Awesome &&\n    `\n    color: #66da72;\n  `}\n  \n  ${props =>\n    props.type === Mood.NotWell &&\n    `\n    color: #66b5da;\n  `}\n  \n  ${props =>\n    props.type === Mood.OK &&\n    `\n    color: #c5c5c5;\n  `}\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #343a40;\n  border-color: #343a40;\n  color: #fff;\n  cursor: pointer;\n  margin-top: 10px;\n  padding: 10px;\n  text-transform: uppercase;\n  width: 100%;\n`;\n","import React from \"react\";\nimport { Heading, Step } from \"./StylesComponents\";\n\nconst Step3: React.FC = () => {\n  return (\n    <Step>\n      <Heading>Thanks for taking the survey!</Heading>\n    </Step>\n  );\n};\n\nexport default Step3;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M200.3 248c12.4-18.7 15.1-37.3 15.7-56-.5-18.7-3.3-37.3-15.7-56-8-12-25.1-11.4-32.7 0-12.4 18.7-15.1 37.3-15.7 56 .5 18.7 3.3 37.3 15.7 56 8.1 12 25.2 11.4 32.7 0zm128 0c12.4-18.7 15.1-37.3 15.7-56-.5-18.7-3.3-37.3-15.7-56-8-12-25.1-11.4-32.7 0-12.4 18.7-15.1 37.3-15.7 56 .5 18.7 3.3 37.3 15.7 56 8.1 12 25.2 11.4 32.7 0zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3z\"\n});\n\nvar SvgMoodAwesome = function SvgMoodAwesome(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"grin-alt\",\n    className: \"svg-inline--fa fa-grin-alt fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMoodAwesome, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mood-awesome.c618921c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-48-248c0-17.7-14.3-32-32-32s-32 14.3-32 32 14.3 32 32 32 32-14.3 32-32zm128-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 112c-35.6 0-88.8 21.3-95.8 61.2-2 11.8 9 21.5 20.5 18.1 31.2-9.6 59.4-15.3 75.3-15.3s44.1 5.7 75.3 15.3c11.4 3.5 22.5-6.3 20.5-18.1-7-39.9-60.2-61.2-95.8-61.2z\"\n});\n\nvar SvgMoodNotWell = function SvgMoodNotWell(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"frown-open\",\n    className: \"svg-inline--fa fa-frown-open fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMoodNotWell, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mood-not-well.f48f7660.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"\n});\n\nvar SvgMoodOk = function SvgMoodOk(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"meh\",\n    className: \"svg-inline--fa fa-meh fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMoodOk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mood-ok.8f6ba41e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { RadioButtonOwnProps } from \"../forms\";\n\nconst Label = styled.label<{ type: string }>`\n  align-items: center;\n  box-sizing: border-box;\n  cursor: pointer;\n  display: inline-flex;\n  height: 70px;\n  justify-content: center;\n  margin: 0 10px;\n  width: 70px;\n  \n  ${props =>\n    props.type === \"awesome\" &&\n    `\n    background-color: #66da72;\n        \n    &:hover {\n      background-color: #5EC666;\n    }\n  `}\n  \n  ${props =>\n    props.type === \"notWell\" &&\n    `\n    background-color: #66b5da;\n        \n    &:hover {\n      background-color: #64A3C6;\n    }\n  `}\n  \n  ${props =>\n    props.type === \"ok\" &&\n    `\n    background-color: #c5c5c5;\n        \n    &:hover {\n      background-color: #B1B1B1;\n    }\n  `}\n  \n  svg {\n    display: block;\n    width: 40px;\n  }\n`;\n\nconst Button = styled.div`\n  display: inline-block;\n  position: relative;\n\n  input {\n    left: -9999px; // offscreen\n    position: absolute;\n\n    &:checked + ${Label} {\n      border: 3px solid #000;\n    }\n\n    &:focus + ${Label} {\n      outline: 3px solid rgba(0, 0, 0, 0.3);\n    }\n  }\n`;\n\nconst RadioButton: React.FC<RadioButtonOwnProps> = ({\n  icon,\n  id,\n  type,\n  value,\n  field,\n  form\n}) => (\n  <Button>\n    <input\n      type=\"radio\"\n      {...field}\n      checked={form.values[field.name] === value}\n      id={id}\n      value={value}\n    />\n\n    <Label htmlFor={id} type={type}>\n      {icon}\n    </Label>\n  </Button>\n);\n\nexport default RadioButton;\n","import {\n  ErrorMessage,\n  Field,\n  Form,\n  Formik,\n  FormikActions,\n  FormikErrors\n} from \"formik\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FormParams, RadioButtonOwnProps, Step1FormValues } from \"../forms\";\nimport { ReactComponent as MoodAwesomeIcon } from \"../icons/mood-awesome.svg\";\nimport { ReactComponent as MoodNotWellIcon } from \"../icons/mood-not-well.svg\";\nimport { ReactComponent as MoodOkIcon } from \"../icons/mood-ok.svg\";\nimport { DataActionTypes } from \"../store/data/types\";\nimport { Mood, SelectedActionTypes } from \"../store/selected/types\";\nimport RadioButton from \"./RadioButton\";\nimport { Error, Heading, Step, SubmitButton } from \"./StylesComponents\";\n\nconst ButtonContainer = styled.div`\n  margin: 0 -10px;\n  text-align: center;\n`;\n\nconst FormContainer = styled.div`\n  margin: 0 auto;\n  max-width: 250px;\n`;\n\ninterface Step1Props {\n  mood: Mood;\n  userName: string;\n\n  clearReasons: () => DataActionTypes;\n  nextStep: () => DataActionTypes;\n  setMood: (mood: Mood) => SelectedActionTypes;\n}\n\nconst Step1: React.FC<Step1Props> = props => {\n  const initialValues: Step1FormValues = {\n    mood: props.mood\n  };\n\n  const formRender = ({ isSubmitting }: FormParams) => (\n    <Form>\n      <ErrorMessage name=\"mood\" render={message => <Error>{message}</Error>} />\n\n      <ButtonContainer>\n        <Field\n          name=\"mood\"\n          render={(innerProps: RadioButtonOwnProps) => (\n            <RadioButton\n              {...innerProps}\n              icon={<MoodAwesomeIcon />}\n              id=\"mood-awesome\"\n              type=\"awesome\"\n              value={Mood.Awesome}\n            />\n          )}\n        />\n\n        <Field\n          name=\"mood\"\n          render={(innerProps: RadioButtonOwnProps) => (\n            <RadioButton\n              {...innerProps}\n              icon={<MoodOkIcon />}\n              id=\"mood-ok\"\n              type=\"ok\"\n              value={Mood.OK}\n            />\n          )}\n        />\n\n        <Field\n          name=\"mood\"\n          render={(innerProps: RadioButtonOwnProps) => (\n            <RadioButton\n              {...innerProps}\n              icon={<MoodNotWellIcon />}\n              id=\"mood-not-well\"\n              type=\"notWell\"\n              value={Mood.NotWell}\n            />\n          )}\n        />\n      </ButtonContainer>\n\n      <SubmitButton type=\"submit\" disabled={isSubmitting}>\n        Select\n      </SubmitButton>\n    </Form>\n  );\n\n  const onFormSubmit = (\n    values: Step1FormValues,\n    actions: FormikActions<Step1FormValues>\n  ) => {\n    if (props.mood !== values.mood) {\n      props.clearReasons();\n    }\n\n    props.setMood(values.mood);\n    props.nextStep();\n    actions.setSubmitting(false);\n  };\n\n  const validateForm = (values: Step1FormValues) => {\n    const errors: FormikErrors<Step1FormValues> = {};\n\n    if (values.mood === Mood.NotSelected) {\n      errors.mood = `Please, tell us what's your mood, ${props.userName}`;\n    }\n\n    return errors;\n  };\n\n  return (\n    <Step>\n      <Heading>How are you feeling today, {props.userName}?</Heading>\n\n      <FormContainer>\n        <Formik\n          enableReinitialize={true}\n          initialValues={initialValues}\n          validate={validateForm}\n          onSubmit={onFormSubmit}\n          render={formRender}\n        />\n      </FormContainer>\n    </Step>\n  );\n};\n\nexport default Step1;\n","import { Mood } from \"../selected/types\";\n\nexport const FETCH_ERROR = \"FETCH_ERROR\";\nexport const INITIAL_TOGGLE = \"INITIAL_TOGGLE\";\nexport const REASONS_FETCH = \"REASONS_FETCH\";\nexport const REASONS_FETCH_SUCCESS = \"REASONS_FETCH_SUCCESS\";\nexport const STEP_NEXT = \"STEP_NEXT\";\nexport const STEP_PREV = \"STEP_PREV\";\nexport const USER_FETCH = \"USER_FETCH\";\nexport const USER_FETCH_SUCCESS = \"USER_FETCH_SUCCESS\";\n\nexport const STEP_MIN = 1;\nexport const STEP_MAX = 3;\n\nexport enum Steps {\n  Step1 = 1,\n  Step2,\n  Step3\n}\n\nexport interface DataState {\n  userName: string;\n  reasons: string[];\n  isInitial: boolean;\n  currentStep: number;\n}\n\ninterface FetchErrorAction {\n  type: typeof FETCH_ERROR;\n  payload: {\n    message: string;\n  };\n}\n\ninterface NextStepAction {\n  type: typeof STEP_NEXT;\n}\n\ninterface PrevStepAction {\n  type: typeof STEP_PREV;\n}\n\nexport interface ReasonsFetchAction {\n  payload: {\n    mood: Mood;\n  };\n  type: typeof REASONS_FETCH;\n}\n\ninterface ReasonsFetchSuccessAction {\n  type: typeof REASONS_FETCH_SUCCESS;\n  payload: {\n    reasons: string[];\n  };\n}\n\ninterface ToggleInitialAction {\n  type: typeof INITIAL_TOGGLE;\n}\n\ninterface UserFetchAction {\n  type: typeof USER_FETCH;\n}\n\ninterface UserFetchSuccessAction {\n  type: typeof USER_FETCH_SUCCESS;\n  payload: {\n    userName: string;\n  };\n}\n\nexport type DataActionTypes =\n  | FetchErrorAction\n  | NextStepAction\n  | PrevStepAction\n  | ReasonsFetchAction\n  | ReasonsFetchSuccessAction\n  | ToggleInitialAction\n  | UserFetchAction\n  | UserFetchSuccessAction;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Step1 from \"../components/Step1\";\nimport { AppState } from \"../store\";\nimport { clearReasons, nextStep } from \"../store/data/actions\";\nimport { DataState } from \"../store/data/types\";\nimport { setMood } from \"../store/selected/actions\";\nimport { Mood, SelectedState } from \"../store/selected/types\";\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    clearReasons: () => dispatch(clearReasons()),\n    nextStep: () => dispatch(nextStep()),\n    setMood: (mood: Mood) => dispatch(setMood(mood))\n  };\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data,\n  selected: state.selected\n});\n\ninterface Step1ContainerProps {\n  data: DataState;\n  selected: SelectedState;\n\n  clearReasons: typeof clearReasons;\n  nextStep: typeof nextStep;\n  setMood: typeof setMood;\n}\n\nconst Step1Container: React.FC<Step1ContainerProps> = props => {\n  return (\n    <Step1\n      mood={props.selected.mood}\n      userName={props.data.userName}\n      clearReasons={props.clearReasons}\n      nextStep={props.nextStep}\n      setMood={props.setMood}\n    />\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Step1Container);\n","import { Mood } from \"../selected/types\";\nimport {\n  DataActionTypes,\n  REASONS_FETCH,\n  REASONS_FETCH_SUCCESS,\n  STEP_NEXT,\n  STEP_PREV,\n  USER_FETCH\n} from \"./types\";\n\nexport function clearReasons(): DataActionTypes {\n  return {\n    payload: {\n      reasons: []\n    },\n    type: REASONS_FETCH_SUCCESS\n  };\n}\n\nexport function fetchReasons(mood: Mood): DataActionTypes {\n  return {\n    payload: {\n      mood\n    },\n    type: REASONS_FETCH\n  };\n}\n\nexport function fetchUser(): DataActionTypes {\n  return {\n    type: USER_FETCH\n  };\n}\n\nexport function nextStep(): DataActionTypes {\n  return {\n    type: STEP_NEXT\n  };\n}\n\nexport function prevStep(): DataActionTypes {\n  return {\n    type: STEP_PREV\n  };\n}\n","import {\n  CUSTOM_REASON_SET,\n  Mood,\n  MOOD_SET,\n  REASONS_SET,\n  SELECTED_SEND,\n  SelectedActionTypes\n} from \"./types\";\n\nexport function send(\n  customReason: string,\n  mood: Mood,\n  selectedReasons: number[]\n): SelectedActionTypes {\n  return {\n    payload: {\n      customReason,\n      mood,\n      selectedReasons\n    },\n    type: SELECTED_SEND\n  };\n}\n\nexport function setReasons(reasons: number[]): SelectedActionTypes {\n  return {\n    payload: {\n      reasons\n    },\n    type: REASONS_SET\n  };\n}\n\nexport function setCustomReason(reason: string): SelectedActionTypes {\n  return {\n    payload: {\n      reason\n    },\n    type: CUSTOM_REASON_SET\n  };\n}\n\nexport function setMood(mood: Mood): SelectedActionTypes {\n  return {\n    payload: {\n      mood\n    },\n    type: MOOD_SET\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CheckboxButtonOwnProps } from \"../forms\";\n\nconst Label = styled.label`\n  background-color: #ddd;\n  cursor: pointer;\n  display: block;\n  margin: 5px 0;\n  padding: 10px 60px 10px 10px;\n  position: relative;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  input {\n    position: absolute;\n    right: 22px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nconst CheckboxButton: React.FC<CheckboxButtonOwnProps> = ({\n  label,\n  value,\n  field,\n  form\n}) => (\n  <Label>\n    {label}\n\n    <input\n      checked={field.value.includes(value)}\n      type=\"checkbox\"\n      {...field}\n      onChange={() => {\n        if (field.value.includes(value)) {\n          const nextValue = field.value.filter(\n            (item: number) => item !== value\n          );\n          form.setFieldValue(field.name, nextValue);\n        } else {\n          const nextValue = field.value.concat(value);\n          form.setFieldValue(field.name, nextValue);\n        }\n      }}\n    />\n  </Label>\n);\n\nexport default CheckboxButton;\n","import {\n  ErrorMessage,\n  Field,\n  FieldProps,\n  Form,\n  Formik,\n  FormikActions,\n  FormikErrors\n} from \"formik\";\nimport React from \"react\";\nimport Loader from \"react-loaders\";\nimport styled from \"styled-components\";\nimport { CheckboxButtonOwnProps, FormParams, Step2FormValues } from \"../forms\";\nimport { ReactComponent as MoodAwesomeIcon } from \"../icons/mood-awesome.svg\";\nimport { ReactComponent as MoodNotWellIcon } from \"../icons/mood-not-well.svg\";\nimport { ReactComponent as MoodOkIcon } from \"../icons/mood-ok.svg\";\nimport { DataActionTypes } from \"../store/data/types\";\nimport { Mood, SelectedActionTypes } from \"../store/selected/types\";\nimport CheckboxButton from \"./CheckboxButton\";\nimport {\n  Error,\n  GoBackButton,\n  Heading,\n  Step,\n  Step2Icon,\n  SubmitButton\n} from \"./StylesComponents\";\n\nconst TextInput = styled.input`\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n  height: 30px;\n  margin-top: 5px;\n  padding: 0 5px;\n  width: 100%;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 20px;\n`;\n\ninterface Step2Props {\n  customReason: string;\n  mood: Mood;\n  reasons: string[];\n  selectedReasons: number[];\n\n  prevStep: () => DataActionTypes;\n  sendSelected: (\n    customReason: string,\n    mood: Mood,\n    selectedReasons: number[]\n  ) => SelectedActionTypes;\n  setCustomReason: (reason: string) => SelectedActionTypes;\n  setReasons: (reasons: number[]) => SelectedActionTypes;\n}\n\nconst Step2: React.FC<Step2Props> = props => {\n  const initialValues: Step2FormValues = {\n    customReason: props.customReason,\n    mood: props.mood,\n    selectedReasons: props.selectedReasons\n  };\n\n  let mood = null;\n\n  switch (props.mood) {\n    case Mood.NotWell:\n      mood = <MoodNotWellIcon />;\n      break;\n    case Mood.OK:\n      mood = <MoodOkIcon />;\n      break;\n    case Mood.Awesome:\n      mood = <MoodAwesomeIcon />;\n      break;\n  }\n\n  const formRender = ({ isSubmitting }: FormParams) => (\n    <Form>\n      <Section>\n        Select one of:\n        {props.reasons.length === 0 && (\n          <Loader active={true} type=\"ball-clip-rotate-multiple\" />\n        )}\n        {props.reasons.map((reason, key) => (\n          <Field\n            key={key}\n            name=\"selectedReasons\"\n            render={(innerProps: CheckboxButtonOwnProps) => (\n              <CheckboxButton {...innerProps} label={reason} value={key} />\n            )}\n          />\n        ))}\n      </Section>\n\n      <Section>\n        Or type your own:\n        <Field\n          name=\"customReason\"\n          render={({ field }: FieldProps<Step2FormValues>) => (\n            <TextInput {...field} />\n          )}\n        />\n      </Section>\n\n      <ErrorMessage\n        name=\"customReason\"\n        render={message => <Error>{message}</Error>}\n      />\n\n      <SubmitButton type=\"submit\" disabled={isSubmitting}>\n        Select\n      </SubmitButton>\n    </Form>\n  );\n\n  const onFormSubmit = (\n    values: Step2FormValues,\n    actions: FormikActions<Step2FormValues>\n  ) => {\n    props.setCustomReason(values.customReason);\n    props.setReasons(values.selectedReasons);\n    props.sendSelected(values.customReason, props.mood, values.selectedReasons);\n    actions.setSubmitting(false);\n  };\n\n  const validateForm = (values: Step2FormValues) => {\n    const errors: FormikErrors<Step2FormValues> = {};\n\n    if (values.customReason === \"\" && values.selectedReasons.length === 0) {\n      errors.customReason = \"Select one of defined or write your own reason\";\n    }\n\n    return errors;\n  };\n\n  return (\n    <Step>\n      <Heading>\n        Why are you <Step2Icon type={props.mood}>{mood}</Step2Icon>?\n      </Heading>\n\n      <GoBackButton onClick={props.prevStep}>&laquo; go back</GoBackButton>\n\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validate={validateForm}\n        onSubmit={onFormSubmit}\n        render={formRender}\n      />\n    </Step>\n  );\n};\n\nexport default Step2;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Step2 from \"../components/Step2\";\nimport { AppState } from \"../store\";\nimport { fetchReasons, prevStep } from \"../store/data/actions\";\nimport { DataState } from \"../store/data/types\";\nimport { send, setCustomReason, setReasons } from \"../store/selected/actions\";\nimport { Mood, SelectedState } from \"../store/selected/types\";\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    fetchReasonsAction: (mood: Mood) => dispatch(fetchReasons(mood)),\n    prevStep: () => dispatch(prevStep()),\n    sendSelected: (\n      customReason: string,\n      mood: Mood,\n      selectedReasons: number[]\n    ) => dispatch(send(customReason, mood, selectedReasons)),\n    setCustomReason: (reason: string) => dispatch(setCustomReason(reason)),\n    setReasons: (reasons: number[]) => dispatch(setReasons(reasons))\n  };\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data,\n  selected: state.selected\n});\n\ninterface Step2ContainerProps {\n  data: DataState;\n  selected: SelectedState;\n\n  fetchReasonsAction: typeof fetchReasons;\n  prevStep: typeof prevStep;\n  sendSelected: typeof send;\n  setCustomReason: typeof setCustomReason;\n  setReasons: typeof setReasons;\n}\n\nconst Step1Container: React.FC<Step2ContainerProps> = props => {\n  const { fetchReasonsAction } = props;\n\n  useEffect(() => {\n    if (props.data.reasons.length === 0) {\n      fetchReasonsAction(props.selected.mood);\n    }\n  }, [fetchReasonsAction]);\n\n  return (\n    <Step2\n      reasons={props.data.reasons}\n      {...props.selected}\n      prevStep={props.prevStep}\n      sendSelected={props.sendSelected}\n      setCustomReason={props.setCustomReason}\n      setReasons={props.setReasons}\n    />\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Step1Container);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Step3 from \"./components/Step3\";\nimport Step1Container from \"./containers/Step1Container\";\nimport Step2Container from \"./containers/Step2Container\";\nimport { AppState } from \"./store\";\nimport { fetchUser } from \"./store/data/actions\";\nimport { DataState, Steps } from \"./store/data/types\";\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    fetchUserAction: () => dispatch(fetchUser())\n  };\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data\n});\n\ninterface AppProps {\n  data: DataState;\n  fetchUserAction: typeof fetchUser;\n}\n\nconst App: React.FC<AppProps> = props => {\n  const { fetchUserAction } = props;\n\n  useEffect(() => {\n    fetchUserAction();\n  }, [fetchUserAction]);\n\n  let step = <div />;\n\n  if (props.data.isInitial) {\n    return step;\n  }\n\n  switch (props.data.currentStep) {\n    case Steps.Step1:\n      step = <Step1Container />;\n      break;\n    case Steps.Step2:\n      step = <Step2Container />;\n      break;\n    case Steps.Step3:\n      step = <Step3 />;\n      break;\n  }\n\n  return step;\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        // navigator.serviceWorker.ready.then(() => {\n        //   console.log(\n        //     \"This web app is being served cache-first by a service \" +\n        //       \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n        //   );\n        // });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   \"New content is available and will be used when all \" +\n              //     \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //   \"No internet connection found. App is running in offline mode.\"\n      // );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  DataActionTypes,\n  DataState,\n  FETCH_ERROR,\n  INITIAL_TOGGLE,\n  REASONS_FETCH_SUCCESS,\n  STEP_MAX,\n  STEP_MIN,\n  STEP_NEXT,\n  STEP_PREV,\n  USER_FETCH_SUCCESS\n} from \"./types\";\n\nconst initialState: DataState = {\n  currentStep: 1,\n  isInitial: true,\n  reasons: [],\n  userName: \"N/A\"\n};\n\nexport function dataReducer(\n  state = initialState,\n  action: DataActionTypes\n): DataState {\n  switch (action.type) {\n    case FETCH_ERROR:\n      // tslint:disable-next-line:no-console\n      console.error(\"error\", action.payload.message); // error handling\n      return state;\n    case INITIAL_TOGGLE:\n      return {\n        ...state,\n        isInitial: false\n      };\n    case REASONS_FETCH_SUCCESS:\n      return {\n        ...state,\n        reasons: action.payload.reasons\n      };\n    case STEP_NEXT:\n      if (state.currentStep === STEP_MAX) {\n        return state;\n      }\n\n      return {\n        ...state,\n        currentStep: state.currentStep + 1\n      };\n    case STEP_PREV:\n      if (state.currentStep === STEP_MIN) {\n        return state;\n      }\n\n      return {\n        ...state,\n        currentStep: state.currentStep - 1\n      };\n    case USER_FETCH_SUCCESS:\n      return {\n        ...state,\n        userName: action.payload.userName\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CUSTOM_REASON_SET,\n  Mood,\n  MOOD_SET,\n  REASONS_SET,\n  SELECTED_SEND_ERROR,\n  SelectedActionTypes,\n  SelectedState\n} from \"./types\";\n\nconst initialState: SelectedState = {\n  customReason: \"\",\n  mood: Mood.NotSelected,\n  selectedReasons: []\n};\n\nexport function selectedReducer(\n  state = initialState,\n  action: SelectedActionTypes\n): SelectedState {\n  switch (action.type) {\n    case CUSTOM_REASON_SET:\n      return {\n        ...state,\n        customReason: action.payload.reason\n      };\n    case MOOD_SET:\n      return {\n        ...state,\n        mood: action.payload.mood\n      };\n    case REASONS_SET:\n      return {\n        ...state,\n        selectedReasons: [...action.payload.reasons]\n      };\n    case SELECTED_SEND_ERROR:\n      // tslint:disable-next-line:no-console\n      console.error(\"error\", action.payload.message); // error handling\n      return state;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { dataReducer } from \"./data/reducers\";\nimport { selectedReducer } from \"./selected/reducers\";\n\nexport const rootReducer = combineReducers({\n  data: dataReducer,\n  selected: selectedReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import axios from \"axios\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  FETCH_ERROR,\n  INITIAL_TOGGLE,\n  REASONS_FETCH,\n  REASONS_FETCH_SUCCESS,\n  ReasonsFetchAction,\n  USER_FETCH,\n  USER_FETCH_SUCCESS\n} from \"./types\";\n\nfunction* fetchReasons(action: ReasonsFetchAction) {\n  try {\n    const response = yield call(\n      axios.get,\n      \"http://www.mocky.io/v2/5d21afe12f0000361dc462fa?mocky-delay=1s\",\n      {\n        params: {\n          mood: action.payload.mood\n        }\n      }\n    );\n    yield put({\n      payload: {\n        reasons: response.data.reasons\n      },\n      type: REASONS_FETCH_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      payload: {\n        message: e.message\n      },\n      type: FETCH_ERROR\n    });\n  }\n}\n\nfunction* fetchUser() {\n  try {\n    const response = yield call(\n      axios.get,\n      \"http://www.mocky.io/v2/5d1d2c6934000023b1b60248\"\n    );\n    yield put({\n      payload: {\n        userName: response.data.name\n      },\n      type: USER_FETCH_SUCCESS\n    });\n    yield put({ type: INITIAL_TOGGLE });\n  } catch (e) {\n    yield put({\n      payload: {\n        message: e.message\n      },\n      type: FETCH_ERROR\n    });\n  }\n}\n\nfunction* reasonsSaga() {\n  yield takeLatest(REASONS_FETCH, fetchReasons);\n}\n\nfunction* userSaga() {\n  yield takeLatest(USER_FETCH, fetchUser);\n}\n\nexport default function* dataSaga() {\n  yield all([reasonsSaga(), userSaga()]);\n}\n","import axios from \"axios\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { STEP_NEXT } from \"../data/types\";\nimport { SELECTED_SEND, SELECTED_SEND_ERROR, SendAction } from \"./types\";\n\nfunction* sendSelected(action: SendAction) {\n  try {\n    yield call(\n      axios.post,\n      \"http://www.mocky.io/v2/5d21cc6d2f00006f2cc46339\",\n      action.payload\n    );\n    yield put({\n      type: STEP_NEXT\n    });\n  } catch (e) {\n    yield put({\n      payload: {\n        message: e.message\n      },\n      type: SELECTED_SEND_ERROR\n    });\n  }\n}\n\nfunction* saga() {\n  yield takeLatest(SELECTED_SEND, sendSelected);\n}\n\nexport default function* dataSaga() {\n  yield all([saga()]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { rootReducer } from \"./store\";\nimport dataSaga from \"./store/data/sagas\";\nimport selectedSaga from \"./store/selected/sagas\";\n\nimport \"./index.scss\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(dataSaga);\nsagaMiddleware.run(selectedSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}